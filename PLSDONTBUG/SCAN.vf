////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : SCAN.vf
// /___/   /\     Timestamp : 12/15/2019 19:55:50
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog R:/digital-assignment/PLSDONTBUG/SCAN.vf -w R:/digital-assignment/PLSDONTBUG/SCAN.sch
//Design Name: SCAN
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module decoder3to4_MUSER_SCAN(X, 
                              Y);

    input [2:0] X;
   output [3:0] Y;
   
   
   AND3B2  XLXI_27 (.I0(X[1]), 
                   .I1(X[2]), 
                   .I2(X[0]), 
                   .O(Y[3]));
   AND3B2  XLXI_28 (.I0(X[0]), 
                   .I1(X[2]), 
                   .I2(X[1]), 
                   .O(Y[2]));
   AND3B1  XLXI_29 (.I0(X[2]), 
                   .I1(X[1]), 
                   .I2(X[0]), 
                   .O(Y[1]));
   AND3B2  XLXI_30 (.I0(X[0]), 
                   .I1(X[1]), 
                   .I2(X[2]), 
                   .O(Y[0]));
endmodule
`timescale 1ns / 1ps

module memo_MUSER_SCAN(C, 
                       CLR, 
                       EN, 
                       P, 
                       Q);

    input C;
    input CLR;
    input EN;
    input [3:0] P;
   output [3:0] Q;
   
   wire XLXN_28;
   
   FDC  XLXI_1 (.C(XLXN_28), 
               .CLR(CLR), 
               .D(P[3]), 
               .Q(Q[3]));
   FDC  XLXI_2 (.C(XLXN_28), 
               .CLR(CLR), 
               .D(P[2]), 
               .Q(Q[2]));
   FDC  XLXI_3 (.C(XLXN_28), 
               .CLR(CLR), 
               .D(P[1]), 
               .Q(Q[1]));
   FDC  XLXI_4 (.C(XLXN_28), 
               .CLR(CLR), 
               .D(P[0]), 
               .Q(Q[0]));
   AND2  XLXI_6 (.I0(C), 
                .I1(EN), 
                .O(XLXN_28));
endmodule
`timescale 1ns / 1ps

module memo4_MUSER_SCAN(C, 
                        CLR, 
                        P, 
                        SEL, 
                        Q0, 
                        Q1, 
                        Q2, 
                        Q3);

    input C;
    input CLR;
    input [3:0] P;
    input [3:0] SEL;
   output [3:0] Q0;
   output [3:0] Q1;
   output [3:0] Q2;
   output [3:0] Q3;
   
   
   memo_MUSER_SCAN  XLXI_1 (.C(C), 
                           .CLR(CLR), 
                           .EN(SEL[3]), 
                           .P(P[3:0]), 
                           .Q(Q3[3:0]));
   memo_MUSER_SCAN  XLXI_2 (.C(C), 
                           .CLR(CLR), 
                           .EN(SEL[2]), 
                           .P(P[3:0]), 
                           .Q(Q2[3:0]));
   memo_MUSER_SCAN  XLXI_5 (.C(C), 
                           .CLR(CLR), 
                           .EN(SEL[1]), 
                           .P(P[3:0]), 
                           .Q(Q1[3:0]));
   memo_MUSER_SCAN  XLXI_6 (.C(C), 
                           .CLR(CLR), 
                           .EN(SEL[0]), 
                           .P(P[3:0]), 
                           .Q(Q0[3:0]));
endmodule
`timescale 1ns / 1ps

module SCAN(CLK20Mhz, 
            CLR, 
            CLRmemo, 
            Data, 
            EN, 
            isPressed, 
            Dout, 
            mode);

    input CLK20Mhz;
    input CLR;
    input CLRmemo;
    input [3:0] Data;
    input EN;
    input isPressed;
   output [15:0] Dout;
   output [1:0] mode;
   
   wire XLXN_5;
   wire [2:0] XLXN_6;
   wire [3:0] XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   
   memo4_MUSER_SCAN  XLXI_1 (.C(CLK20Mhz), 
                            .CLR(CLRmemo), 
                            .P(Data[3:0]), 
                            .SEL(XLXN_7[3:0]), 
                            .Q0(Dout[3:0]), 
                            .Q1(Dout[7:4]), 
                            .Q2(Dout[11:8]), 
                            .Q3(Dout[15:12]));
   AND2  XLXI_2 (.I0(isPressed), 
                .I1(EN), 
                .O(XLXN_5));
   counterTO4  XLXI_4 (.C(XLXN_5), 
                      .CLR(CLR), 
                      .Q(XLXN_6[2:0]), 
                      .TC(XLXN_9));
   decoder3to4_MUSER_SCAN  XLXI_5 (.X(XLXN_6[2:0]), 
                                  .Y(XLXN_7[3:0]));
   BUF  XLXI_9 (.I(XLXN_9), 
               .O(mode[0]));
   GND  XLXI_10 (.G(XLXN_8));
   BUF  XLXI_11 (.I(XLXN_8), 
                .O(mode[1]));
endmodule
